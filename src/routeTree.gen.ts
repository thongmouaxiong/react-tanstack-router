/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as ServiceImport } from './routes/service'
import { Route as MapImport } from './routes/map'
import { Route as LoginImport } from './routes/login'
import { Route as HomeImport } from './routes/home'
import { Route as ExcelImport } from './routes/excel'
import { Route as AboutImport } from './routes/about'
import { Route as IndexImport } from './routes/index'

// Create/Update Routes

const ServiceRoute = ServiceImport.update({
  id: '/service',
  path: '/service',
  getParentRoute: () => rootRoute,
} as any)

const MapRoute = MapImport.update({
  id: '/map',
  path: '/map',
  getParentRoute: () => rootRoute,
} as any)

const LoginRoute = LoginImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => rootRoute,
} as any)

const HomeRoute = HomeImport.update({
  id: '/home',
  path: '/home',
  getParentRoute: () => rootRoute,
} as any)

const ExcelRoute = ExcelImport.update({
  id: '/excel',
  path: '/excel',
  getParentRoute: () => rootRoute,
} as any)

const AboutRoute = AboutImport.update({
  id: '/about',
  path: '/about',
  getParentRoute: () => rootRoute,
} as any)

const IndexRoute = IndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexImport
      parentRoute: typeof rootRoute
    }
    '/about': {
      id: '/about'
      path: '/about'
      fullPath: '/about'
      preLoaderRoute: typeof AboutImport
      parentRoute: typeof rootRoute
    }
    '/excel': {
      id: '/excel'
      path: '/excel'
      fullPath: '/excel'
      preLoaderRoute: typeof ExcelImport
      parentRoute: typeof rootRoute
    }
    '/home': {
      id: '/home'
      path: '/home'
      fullPath: '/home'
      preLoaderRoute: typeof HomeImport
      parentRoute: typeof rootRoute
    }
    '/login': {
      id: '/login'
      path: '/login'
      fullPath: '/login'
      preLoaderRoute: typeof LoginImport
      parentRoute: typeof rootRoute
    }
    '/map': {
      id: '/map'
      path: '/map'
      fullPath: '/map'
      preLoaderRoute: typeof MapImport
      parentRoute: typeof rootRoute
    }
    '/service': {
      id: '/service'
      path: '/service'
      fullPath: '/service'
      preLoaderRoute: typeof ServiceImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/about': typeof AboutRoute
  '/excel': typeof ExcelRoute
  '/home': typeof HomeRoute
  '/login': typeof LoginRoute
  '/map': typeof MapRoute
  '/service': typeof ServiceRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/about': typeof AboutRoute
  '/excel': typeof ExcelRoute
  '/home': typeof HomeRoute
  '/login': typeof LoginRoute
  '/map': typeof MapRoute
  '/service': typeof ServiceRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexRoute
  '/about': typeof AboutRoute
  '/excel': typeof ExcelRoute
  '/home': typeof HomeRoute
  '/login': typeof LoginRoute
  '/map': typeof MapRoute
  '/service': typeof ServiceRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/about'
    | '/excel'
    | '/home'
    | '/login'
    | '/map'
    | '/service'
  fileRoutesByTo: FileRoutesByTo
  to: '/' | '/about' | '/excel' | '/home' | '/login' | '/map' | '/service'
  id:
    | '__root__'
    | '/'
    | '/about'
    | '/excel'
    | '/home'
    | '/login'
    | '/map'
    | '/service'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  AboutRoute: typeof AboutRoute
  ExcelRoute: typeof ExcelRoute
  HomeRoute: typeof HomeRoute
  LoginRoute: typeof LoginRoute
  MapRoute: typeof MapRoute
  ServiceRoute: typeof ServiceRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  AboutRoute: AboutRoute,
  ExcelRoute: ExcelRoute,
  HomeRoute: HomeRoute,
  LoginRoute: LoginRoute,
  MapRoute: MapRoute,
  ServiceRoute: ServiceRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/about",
        "/excel",
        "/home",
        "/login",
        "/map",
        "/service"
      ]
    },
    "/": {
      "filePath": "index.tsx"
    },
    "/about": {
      "filePath": "about.tsx"
    },
    "/excel": {
      "filePath": "excel.tsx"
    },
    "/home": {
      "filePath": "home.tsx"
    },
    "/login": {
      "filePath": "login.tsx"
    },
    "/map": {
      "filePath": "map.tsx"
    },
    "/service": {
      "filePath": "service.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
